require 'spec_helper'

describe 'symfony::app::parameters', type: :define do
  let :pre_condition do
    "include symfony"
  end

  shared_examples 'parameters' do |params|

    p = {
      target:   '/test/symfony/app/config',
      filename: 'parameters.yml',
      template: 'symfony/app/parameters.erb',
    }

    p.merge!(params) if params

    it do
      should contain_file("#{p[:target]}/#{p[:filename]}")
	.with({ensure: 'file', owner: p[:user], group: p[:group]})
	.with_content(/# This file is auto-generated by Puppet./)
    end
  end

  context 'for osfamily Debian' do
    let(:facts) {{ :osfamily => 'Debian' }}
    let(:title) { 'Debian' }

    context 'defaults' do
      it_behaves_like 'parameters', {user: 'www-data', group: 'www-data'}
    end

    context 'custom' do
      params = {user: 'nobody', group: 'nobody'}
      let(:params) { params }
      it_behaves_like 'parameters', params
    end
  end

  context 'for osfamily RedHat' do
    let(:facts) {{ :osfamily => 'RedHat' }}
    let(:title) { 'RedHat' }

    context 'defaults' do
      it_behaves_like 'parameters', {user: 'apache', group: 'apache'}
    end

    context 'custom' do
      params = {user: 'httpd', group: 'httpd'}
      let(:params) { params }
      it_behaves_like 'parameters', params
    end
  end
end
